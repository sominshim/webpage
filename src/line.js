var rate_fm = [41.90140845, 41.71076065, 40.27691907, 38.54781722, 37.43126545,
       36.82058646, 36.26977361, 36.13426165, 36.01817989, 36.19230936,
       36.59841336, 37.05843937, 37.47931332, 37.83722985, 37.90789719,
       37.82584941, 37.61591322, 37.30132467, 36.98786066, 36.88882968,
       36.7102401 , 36.61568104, 36.7677024 , 36.97860065, 37.20084071,
       37.32744698, 37.28205052, 37.19885726, 37.15193936, 37.04397832,
       36.88629968, 36.87146472, 36.95459788, 37.14868283, 37.26934445,
       37.3318527 , 37.48937373, 37.64010174, 37.6596965 , 37.68927245,
       37.65532215, 37.56509533, 37.51655376, 37.50420627, 37.56083198,
       37.59177242, 37.68950484, 37.79659349, 37.9285683 , 38.04436911,
       38.11957637, 38.14004365, 38.13823036, 38.133196  , 38.12731857,
       38.16399589, 38.21637046, 38.25093918, 38.32317434, 38.4345321 ,
       38.49188264, 38.53682605, 38.5394735 , 38.5355727 , 38.55466826,
       38.55161353, 38.5316074 , 38.54302924, 38.56917399, 38.59756554,
       38.64366701, 38.70422127, 38.78146302, 38.84888909, 38.86291653,
       38.88170594, 38.86142452, 38.8513779 , 38.84389755, 38.85173574,
       38.86664682, 38.85291724, 38.90832983, 38.94449269, 38.94747548,
       38.95427013, 38.93222613, 38.85894113, 38.79718197, 38.71426249,
       38.66624666, 38.64721374, 38.63712982, 38.64199556, 38.66553362,
       38.69537945, 38.71853818, 38.72812689, 38.72399316, 38.71573951,
       38.70010021, 38.69430966, 38.69587995, 38.71710182, 38.74282811,
       38.77344377, 38.81356772, 38.86338719, 38.92246078, 38.97832256,
       39.00258813, 39.00377202, 38.99651273, 38.97646199, 38.96334939,
       38.97563108, 39.0043026 , 39.03347873, 39.07489659, 39.11513665,
       39.16448422, 39.18589889, 39.21082755, 39.21648071, 39.22100385,
       39.21899365, 39.21701709, 39.24376325, 39.2795105 , 39.29839147,
       39.33068507, 39.36074149, 39.38832228, 39.41832816, 39.41600993,
       39.40544652, 39.39447028, 39.37921869, 39.37614834, 39.36204897,
       39.35459642, 39.35141475, 39.35321666, 39.35493631, 39.37193241,
       39.38767995, 39.38917438, 39.37464871, 39.35810754, 39.32449638,
       39.30222797, 39.28870279, 39.27277536, 39.26312267, 39.26389792,
       39.26561487, 39.26558952, 39.26763414, 39.25422747, 39.23762177,
       39.21402089, 39.18034316, 39.15674249, 39.13352747, 39.1135547 ,
       39.10020364, 39.08886801, 39.07504292, 39.07201738, 39.05988141,
       39.03615478, 38.99775024, 38.94813073, 38.90403787, 38.86017036,
       38.8200673 , 38.79032692, 38.76831046, 38.74597093, 38.70967075,
       38.67030783, 38.62490745, 38.5681068 , 38.51615974, 38.45580486,
       38.38361993, 38.31864216, 38.24278505, 38.17236786, 38.10049487,
       38.04773958, 37.9998399 , 37.95327524, 37.9064147 , 37.85032814,
       37.78887298, 37.72078117, 37.64433154, 37.57056778, 37.50003738,
       37.43669849, 37.37554538, 37.32575267, 37.26911458, 37.22322898,
       37.17932528, 37.12291748, 37.06245176, 36.98515013, 36.91148805,
       36.83740985, 36.7720346 , 36.71125332, 36.64701783, 36.59924719,
       36.54056599, 36.50090946, 36.45751323, 36.40618355, 36.34926954,
       36.27934805, 36.21067829, 36.14404537, 36.08288214, 36.02429627,
       35.96799697, 35.92144057, 35.87102487, 35.83294177, 35.79552027,
       35.74360898, 35.69306385, 35.65362488, 35.5906477 , 35.52457017,
       35.47186418, 35.4156365 , 35.36195446, 35.3559434 ]
var rate_th = [1.23239437, 1.09872611, 1.10210023, 1.27560881, 1.25173853,
       1.36444532, 1.44195519, 1.42981086, 1.46492372, 1.47871347,
       1.48822425, 1.47126944, 1.45350618, 1.43698696, 1.43117261,
       1.42349366, 1.42452448, 1.44187535, 1.45022883, 1.46677243,
       1.47375119, 1.46914789, 1.44840491, 1.46288644, 1.45089523,
       1.44304924, 1.44718669, 1.45487281, 1.46009965, 1.45806044,
       1.46768817, 1.45702615, 1.45199292, 1.44718257, 1.44627307,
       1.43959022, 1.42793559, 1.42593441, 1.4243639 , 1.41470997,
       1.40452256, 1.40228443, 1.40104744, 1.40149111, 1.39018173,
       1.3798397 , 1.37006259, 1.36003928, 1.34799933, 1.34282425,
       1.34118185, 1.33742929, 1.3358207 , 1.33591721, 1.33823515,
       1.33729128, 1.32705791, 1.32164673, 1.31245877, 1.30560928,
       1.29904885, 1.29140706, 1.28975757, 1.28861368, 1.28645677,
       1.28706122, 1.29403187, 1.28774386, 1.29259599, 1.28941255,
       1.28927998, 1.28443284, 1.27863816, 1.27642116, 1.27765402,
       1.27608701, 1.27096302, 1.27116501, 1.26947243, 1.26881781,
       1.27008921, 1.26595282, 1.25929856, 1.25574436, 1.25334893,
       1.2493244 , 1.24760419, 1.24992377, 1.24822407, 1.25006661,
       1.25303978, 1.25211589, 1.25311544, 1.2518541 , 1.24916095,
       1.24434323, 1.24031813, 1.23849296, 1.23272161, 1.23249583,
       1.2331695 , 1.23308503, 1.23474613, 1.23386628, 1.23258349,
       1.22967579, 1.22742984, 1.2252187 , 1.22088024, 1.21970209,
       1.21820236, 1.22025395, 1.22112565, 1.22267204, 1.22209764,
       1.22399703, 1.22066969, 1.21769804, 1.21497135, 1.21097463,
       1.20869798, 1.20800651, 1.20541714, 1.20375292, 1.20213784,
       1.20248933, 1.20487021, 1.20241409, 1.20126624, 1.20080184,
       1.19971923, 1.19910997, 1.20100789, 1.20147874, 1.206231  ,
       1.20814383, 1.21049022, 1.21227631, 1.21351914, 1.21630005,
       1.21732137, 1.21657969, 1.21658869, 1.21430441, 1.21589298,
       1.21408098, 1.21256592, 1.21224874, 1.21534644, 1.21820164,
       1.22064953, 1.22346799, 1.2253669 , 1.22552677, 1.22514365,
       1.22651396, 1.22558021, 1.22612815, 1.22645268, 1.22896403,
       1.23172237, 1.23356815, 1.23519851, 1.23864935, 1.24202139,
       1.24348262, 1.24599463, 1.247819  , 1.24878862, 1.24975556,
       1.25251967, 1.25517688, 1.25981727, 1.26395618, 1.26918113,
       1.27374333, 1.28020242, 1.28054672, 1.28255906, 1.28298121,
       1.28705888, 1.291495  , 1.29491591, 1.29775398, 1.30464255,
       1.31335771, 1.31933978, 1.32935011, 1.33462241, 1.34261767,
       1.35001825, 1.35427243, 1.35773616, 1.36162035, 1.36446901,
       1.36804786, 1.37267155, 1.38166458, 1.38863573, 1.39252563,
       1.39736938, 1.40158469, 1.4028858 , 1.40429106, 1.40679054,
       1.41037776, 1.41200296, 1.41486643, 1.41898789, 1.42327325,
       1.42827244, 1.43212254, 1.43617403, 1.44081282, 1.44390724,
       1.44628851, 1.44625413, 1.44718499, 1.44970962, 1.45563601,
       1.46029491, 1.4643751 , 1.4667583 , 1.47031276, 1.47407068,
       1.47629366, 1.47779908, 1.47883665, 1.4806353 , 1.48300645,
       1.4845207 , 1.49129046, 1.49936804, 1.50961709, 1.52181696,
       1.5270706 , 1.53574586, 1.54205655, 1.54242052]
       // define the area
var area = d3.area()
  .x(function(d) { return x(d.date); })
  .y0(height)
  .y1(function(d) { return y(d.close); });
var margin = {top: 20, right: 20, bottom: 30, left: 50},
   width = 960 - margin.left - margin.right,
   height = 500 - margin.top - margin.bottom;

       // set the ranges
var x = d3.scaleTime().range([0, width]);
var y = d3.scaleLinear().range([height, 0]);

var svg = d3.select(".line")
    .append("svg")
    .attr("width", 930)
    .attr("height", 700)
    .attr('transform', 'translate(150,0)')

var xAxis = svg.append("line")
    .attr("x1", 50)
    .attr("y1", 600)
    .attr("x2", 1000)
    .attr("y2", 600)
    .style("stroke", "black")
    .style("stroke-width", 0.6)

var yAxis = svg.append("line")
    .attr("x1", 50)
    .attr("y1", 600)
    .attr("x2", 50)
    .attr("y2", 30)
    .style("stroke", "black")
    .style("stroke-width", 0.6)

for (var i = 0; i < 6; i++) {
    svg.append("line") // y 눈금
        .attr("x1", 50)
        .attr("y1", 600 - i * 90)
        .attr("x2", 55)
        .attr("y2", 600 - i * 90)
        .style("stroke", "black")
        .style("stroke-width", 0.6)
        .attr('transform', 'translate(0,-25)')
}

for (var i = 0; i < 3; i++) {

    svg.append("line") // y 눈금
        .attr("x1", 55)
        .attr("y1", 600 - i * 180)
        .attr("x2", 60)
        .attr("y2", 600 - i * 180)
        .style("stroke", "black")
        .style("stroke-width", 0.6)
        .attr('transform', 'translate(0,-25)')
}

svg.append('text')
    .attr('x', 900)
    .attr('y', 590)
    .text("Year")
    .style('font-size', '14px')
    .attr("font-family", "sans-serif")
    .attr("fill", "gray")

svg.append('text')
    .attr('x', 10)
    .attr('y', 20)
    .text("Rate")
    .style('font-size', '14px')
    .attr("font-family", "sans-serif")
    .attr("fill", "gray")

rate_fm.forEach((d, i) => {
    svg.append("line") // x 눈금
        .attr("x1", (i + 1) * 90)
        .attr("y1", 600)
        .attr("x2", (i + 1) * 90)
        .attr("y2", 590)
        .style("stroke", "black")
        .style("stroke-width", 0.6)
        .attr('transform', 'translate(50,0)')

    svg.append('text') // x 레전드
        .attr('x', i * 45 + 45)
        .attr('y', 625)
        .text((i + 01) + "'")
        .style('font-size', '14px')
        .attr("font-family", "sans-serif")
        .attr("fill", "gray")

    svg.append('text') // y 레전드
        .attr('x', 45)
        .attr('y', 580 - i * 90)
        .text((i ) * 20 + '%')
        .style('font-size', '12px')
        .attr("font-family", "sans-serif")
        .attr("fill", "gray")
        .attr("text-anchor", "end")
})

svg.append("line") // 100%
    .attr("x1", 50)
    .attr("y1", 125 )
    .attr("x2", 229*5)
    .attr("y2", 125 )
    .style("stroke", "#D8D8D8")
    .style("stroke-width", 3)

rate_fm.forEach((d, i) => {
    if (i == 239) {
        return;
    }

    var line = svg.append("line")
        .attr("x1", i * 5)
        .attr("y1", (400 - rate_fm[i] ))
        .attr("x2", (i + 1) * 5)
        .attr("y2", (400 - rate_fm[i + 1]))
        .attr("transform", "translate(50,25)")
        .style("stroke", "#A4A4A4")
        .style("stroke-width", 3)

    // var circle = svg.append('circle')
    //     .attr('cx', (i + 1) * 5)
    //     .attr('cy', (100 - data[i + 1]))
    //     .attr('r', 3)
    //     .attr("transform", "translate(50,25)")
    //     .style('fill', '#5eb7b7')
})

rate_th.forEach((d, i) => {

    if (i == 239) {
        return;
    }

    var line = svg.append("line")
        .attr("x1", i * 5)
        .attr("y1", (545 - rate_th[i] ))
        .attr("x2", (i + 1) * 5)
        .attr("y2", (545 - rate_th[i + 1]))
        .attr("transform", "translate(50,25)")
        .style("stroke", "#585858")
        .style("stroke-width", 3)

})
// add the area
// svg.append("path")
//  .data([rate_fm])
//  .attr("class", "area")
 // .attr("d", area);

svg.append('rect')
    .attr('x', 790)
    .attr('y', 210)
    .attr('width', 10)
    .attr('height', 10)
    .style('fill', '#585858')

svg.append('rect')
    .attr('x', 790)
    .attr('y', 190)
    .attr('width', 10)
    .attr('height', 10)
    .style('fill', '#A4A4A4')
    .on('mouseover', cc)

function cc() {
    var mouseXY = d3.mouse(this);
    svg.append('rect')
        .attr('x', 70)
        .attr('y', 120)
        .attr('width', 10)
        .attr('height', 10)
        .on("mouseover", function () { d3.select(this).attr("fill", "red"); })
        .on("mouseout", function () { d3.select(this).attr("fill", "#5eb7b7"); });
}
svg.append('text')
    .attr('x', 810)
    .attr('y', 180)
    .text('Misdemeanor')
    .style('font-size', '12px')
    .attr("font-family", "sans-serif")
    .attr("fill", "dark gray")

svg.append('text')
    .attr('x', 810)
    .attr('y', 200)
    .text('Felony')
    .style('font-size', '12px')
    .attr("font-family", "sans-serif")
    .attr("fill", "dark gray")

svg.append('text')
    .attr('x', 810)
    .attr('y', 220)
    .text('Homicide')
    .style('font-size', '12px')
    .attr("font-family", "sans-serif")
    .attr("fill", "dark gray")
